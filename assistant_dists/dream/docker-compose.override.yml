services:
  agent:
    command: sh -c 'bin/wait && python -m deeppavlov_agent.run agent.pipeline_config=assistant_dists/dream/pipeline_conf.json'
    environment:
      WAIT_HOSTS: "convers-evaluator-annotator:8004,
          spacy-nounphrases:8006, rake-keywords:8007, dff-program-y-skill:8008, sentseg:8011, convers-evaluation-selector:8009,
          personality-catcher:8010, dff-intent-responder-skill:8012, intent-catcher:8014, badlisted-words:8018,
          sentrewrite:8017, ner:8021, dff-program-y-dangerous-skill:8022, dff-movie-skill:8023,
          convert-reddit:8029, personal-info-skill:8030, asr:8031, misheard-asr:8033, dff-weather-skill:8037,
          eliza:8047, emotion-skill:8049, dummy-skill-dialog:8052, comet-atomic:8053, meta-script-skill:8054,
          dff-coronavirus-skill:8061, small-talk-skill:8062, game-cooperative-skill:8068, dff-program-y-wide-skill:8064,
          comet-conceptnet:8065, news-api-skill:8066, dff-short-story-skill:8057, factoid-qa:8071, kbqa:8072,
          spelling-preprocessing:8074, entity-linking:8075, wiki-parser:8077, text-qa:8078,
          knowledge-grounding:8083, combined-classification:8087, knowledge-grounding-skill:8085,
          dff-friendship-skill:8086, entity-storer:8089,
          dff-book-skill:8032, dff-grounding-skill:8080,
          dff-animals-skill:8094, dff-travel-skill:8096, dff-food-skill:8097, dff-sport-skill:8098, dff-science-skill:8101,
          midas-classification:8090, fact-random:8119, fact-retrieval:8100,
          dff-funfact-skill:8104, dff-bot-persona-skill:8105, news-api-annotator:8112,
          dff-gossip-skill:8109, dff-wiki-skill:8111, dff-gaming-skill:8115, topic-recommendation:8113,
          user-persona-extractor:8114, wiki-facts:8116, dff-music-skill:8099, entity-detection:8103, dff-art-skill:8117,
          midas-predictor:8121, dialogpt:8125, storygpt:8126, prompt-storygpt:8127, dff-template-skill:8120,
          entity-extraction-kg:9103, wiki-parser-kg:9077, dff-kg-personality-skill:8058, property-extraction:8126,
          user-knowledge-graph:8127"
      WAIT_HOSTS_TIMEOUT: ${WAIT_TIMEOUT:-480}

  entity-linking:
    env_file: [.env]
    build:
      args:
        CONFIG: entity_linking_eng.json
        PORT: 8075
        SRC_DIR: annotators/entity_linking
      context: ./
      dockerfile: annotators/entity_linking/Dockerfile
    environment:
      - CUDA_VISIBLE_DEVICES=0
    deploy:
      resources:
        limits:
          memory: 23G
        reservations:
          memory: 23G

  wiki-parser:
    env_file: [.env]
    build:
      args:
        WIKI_LITE_DB: http://files.deeppavlov.ai/kbqa/wikidata/wikidata_lite.hdt
        WIKI_LITE_INDEX_DB: http://files.deeppavlov.ai/kbqa/wikidata/wikidata_lite.hdt.index.v1-1
        WIKI_CACHE_DB: http://files.deeppavlov.ai/kbqa/wikidata/wikidata_cache.json
        CONFIG: wiki_parser.json
        PORT: 8077
        SRC_DIR: annotators/wiki_parser
        COMMIT: ff5b156d16a949c3ec99da7fb60ae907dec37a41
      context: ./
      dockerfile: annotators/wiki_parser/Dockerfile
    command: flask run -h 0.0.0.0 -p 8077
    environment:
      - CUDA_VISIBLE_DEVICES=''
      - FLASK_APP=server
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 256M

  knowledge-grounding:
    env_file: [.env]
    build:
      args:
        MODEL_CKPT: 3_sent_62_epochs
        DATA_ARG: http://files.deeppavlov.ai/alexaprize_data/parlai_grounding_knowledge/parlai_topical_chat_data.tar.gz
        MODEL1_ARG: http://files.deeppavlov.ai/alexaprize_data/parlai_grounding_knowledge/topical_chat_blender90_1_sent_48_epochs.tar.gz
        MODEL2_ARG: http://files.deeppavlov.ai/alexaprize_data/parlai_grounding_knowledge/topical_chat_blender90_3_sent_62_epochs.tar.gz
      context: ./services/knowledge_grounding/
    command: flask run -h 0.0.0.0 -p 8083
    environment:
      - CUDA_VISIBLE_DEVICES=0
      - FLASK_APP=server
    deploy:
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 4G

  entity-storer:
    env_file: [.env]
    build:
      context: .
      dockerfile: annotators/entity_storer/Dockerfile
      args:
        WORK_DIR: annotators/entity_storer
        SERVICE_PORT: 8089
    command: flask run -h 0.0.0.0 -p 8089
    environment:
      - FLASK_APP=server
    deploy:
      resources:
        limits:
          memory: 384M
        reservations:
          memory: 384M

  knowledge-grounding-skill:
    env_file: [.env]
    build:
      context: .
      dockerfile: ./skills/knowledge_grounding_skill/Dockerfile
    command: python -m flask run -h 0.0.0.0 -p 8085
    environment:
      - CUDA_VISIBLE_DEVICES=''
      - FLASK_APP=server
    deploy:
      resources:
        limits:
          memory: 200M
        reservations:
          memory: 200M

  dff-bot-persona-skill:
    env_file: [.env]
    build:
      args:
        SERVICE_PORT: 8105
        SERVICE_NAME: dff_bot_persona_skill
      context: .
      dockerfile: ./skills/dff_bot_persona_skill/Dockerfile
    command: gunicorn --workers=1 server:app -b 0.0.0.0:8105
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 256M

  dff-wiki-skill:
    env_file: [.env]
    build:
      args:
        SERVICE_PORT: 8111
        SERVICE_NAME: dff_wiki_skill
        COMMIT: 5b99ac3392e8e178e2bb4f9b218d4ddb2ec2e242
      context: ./
      dockerfile: ./skills/dff_wiki_skill/Dockerfile
    command: gunicorn --workers=1 server:app -b 0.0.0.0:8111
    # command:  flask run -h 0.0.0.0 -p 8111
    # environment:
    #   - FLASK_APP=server
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 256M

  user-persona-extractor:
    env_file: [.env]
    build:
      context: .
      dockerfile: ./annotators/user_persona_extractor/Dockerfile
    command: flask run -h 0.0.0.0 -p 8114
    environment:
      - FLASK_APP=server
    deploy:
      resources:
        limits:
          memory: 80M
        reservations:
          memory: 80M

  entity-detection:
    env_file: [.env]
    build:
      args:
        SEQ_TAG_CONFIG: src/wikipedia_entity_detection_distilbert.json
        EL_TAG_CONFIG: src/el_tags_infer.json
        CONFIG: entity_detection_eng.json
        LOWERCASE: 1
        PORT: 8103
        SRC_DIR: annotators/entity_detection/
        FINEGRAINED: 0
      context: ./
      dockerfile: annotators/entity_detection/Dockerfile
    command: flask run -h 0.0.0.0 -p 8103
    environment:
      - FLASK_APP=server
      - CUDA_VISIBLE_DEVICES=0
    deploy:
      resources:
        limits:
          memory: 2.5G
        reservations:
          memory: 2.5G

  dialogpt-persona-based:
    env_file: [ .env ]
    build:
      args:
        SERVICE_PORT: 8131
        SERVICE_NAME: dialogpt_persona_based
        PRETRAINED_MODEL_NAME_OR_PATH: dim/dialogpt-medium-persona-chat
        MAX_PERSONA_SENTENCES: 3
      context: .
      dockerfile: ./services/dialogpt_persona_based/Dockerfile
    command: flask run -h 0.0.0.0 -p 8131
    environment:
      - CUDA_VISIBLE_DEVICES=0
      - FLASK_APP=server
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 2G
  terminusdb:
    image: terminusdb/terminusdb-server:latest
  entity-extraction-kg:
    build:
      args:
        NER_CONFIG: entity_detection_en.json
        EL_CONFIG: entity_linking_en_full.json
        PORT: 9103
        SRC_DIR: annotators/entity_extraction_kg/
        INCLUDE_MISC: 1
        MISC_THRES: 0.88
      context: ./
      dockerfile: annotators/entity_extraction_kg/Dockerfile
    environment:
      - CUDA_VISIBLE_DEVICES=''
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 2G

  wiki-parser-kg:
    env_file: [.env]
    build:
      args:
        WIKI_LITE_DB: http://files.deeppavlov.ai/kbqa/wikidata/wikidata_lite.hdt
        WIKI_LITE_INDEX_DB: http://files.deeppavlov.ai/kbqa/wikidata/wikidata_lite.hdt.index.v1-1
        WIKI_CACHE_DB: http://files.deeppavlov.ai/kbqa/wikidata/wikidata_cache.json
        CONFIG: wiki_parser.json
        PORT: 9077
        SRC_DIR: annotators/wiki_parser_kg
        COMMIT: ff5b156d16a949c3ec99da7fb60ae907dec37a41
      context: ./
      dockerfile: annotators/wiki_parser_kg/Dockerfile
    command: flask run -h 0.0.0.0 -p 9077
    environment:
      - CUDA_VISIBLE_DEVICES=''
      - FLASK_APP=server
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 256M

  dff-kg-personality-skill:
    env_file: [ .env ]
    build:
      args:
        SERVICE_PORT: 8058
        SERVICE_NAME: dff_kg_personality_skill
      context: .
      dockerfile: ./skills/dff_kg_personality_skill/Dockerfile
    command: gunicorn --workers=1 server:app -b 0.0.0.0:8058 --reload
#    command: sh -c 'bin/wait && gunicorn --workers=1 --log-level=info server:app -b 0.0.0.0:8058 --reload'
    environment:
      WAIT_HOSTS: "neo4j:7474"
      WAIT_HOSTS_TIMEOUT: ${WAIT_TIMEOUT:-480}
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 512M
  property-extraction:
    env_file: [ .env ]
    build:
      args:
        CONFIG: t5_generative_ie_infer.json
        PORT: 8126
        SRC_DIR: annotators/property_extraction/
      context: ./
      dockerfile: annotators/property_extraction/Dockerfile
    command: flask run -h 0.0.0.0 -p 8126
    environment:
      - FLASK_APP=server
      - CUDA_VISIBLE_DEVICES=3
    deploy:
      resources:
        limits:
          memory: 2.5G
        reservations:
          memory: 2.5G

  user-knowledge-graph:
    env_file: [ .env ]
    build:
      args:
        PORT: 8127
        SRC_DIR: annotators/user_knowledge_graph/
      context: ./
      dockerfile: annotators/user_knowledge_graph/Dockerfile
    command: flask run -h 0.0.0.0 -p 8127
    environment:
      - FLASK_APP=server
      - CUDA_VISIBLE_DEVICES=3
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 256M
version: '3.7'
